{{>sidebar}}
<div class="admin-container">
    <div class="container-fluid">
        <div class="row mb-4">
            <div class="col-md-12 fw-bold fs-3">Platillos</div>
        </div>
        <div class="row mt-3">
            <div class="col-md-12">
                <div class="card">
                    <div class="card-header">
                        Platillos de tu restaurante
                    </div>
                    <div class="card-body">
                        <input class="form-control" id="search" type="text" placeholder="Buscar por platillo">
                        <table class="table table-hover align-middle" id="productsTable">
                            <thead>
                                <tr>
                                    <th>ID</th>
                                    <th>Imagen</th>
                                    <th>Nombre del platillo</th>
                                    <th>Costo</th>
                                    <th>Precio</th>
                                    <th>Descripción</th>
                                    <th>Edición</th>
                                </tr>
                            </thead>
                            <tbody id="products-list"></tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    //Listeners
    document.getElementById('search').addEventListener('keyup', tableFilter)

    document.querySelectorAll('.delete-product').forEach(function (product, i) {
        product.addEventListener('click', async function (e) {
            e.preventDefault()

            const idProduct = product.getAttribute('data-product')

            try {
                path = `/api/products/deleteProductByIdByRestaurant/${idProduct}`
                const response = await fetch(path, {
                    method: 'DELETE'
                })

                const data = await response.json()
            } catch (error) {
                console.log(error)
            }
        })
    })

    //Functions
    function tableFilter() {
        var input, filter, table, tr, td, i, txtValue

        input = document.getElementById("search");
        filter = input.value.toUpperCase();
        table = document.getElementById("productsTable");
        tr = table.getElementsByTagName("tr");

        for (i = 0; i < tr.length; i++) {
            td = tr[i].getElementsByTagName("td")[1]

            if (td) {
                txtValue = td.textContent || td.innerText

                if (txtValue.toUpperCase().indexOf(filter) > -1) {
                    tr[i].style.display = ""
                } else {
                    tr[i].style.display = "none"
                }
            }
        }
    }
</script>

<script>
    class UI {
        async loadProducts() {
            const path = `/api/products/getAllProductsByRestaurant`
            try {
                const data = await fetch(path)
                const response = await data.json()

                return response
            } catch (error) {
                console.log(error)
            }
        }

        showProductsTable(products) {
            const productsTable = document.getElementById('products-list')
            let element

            products.forEach(function (product, i) {
                element = document.createElement('tr')
                element.innerHTML += `
                    <td>${product.id_product}</td>
                    <td><img src="/${product.image}" class="img-thumbnail" alt="${product.name}" width="150px"></td>
                    <td>${product.name}</td>
                    <td>${product.cost}</td>
                    <td>${product.price}</td>
                    <td>${product.description}</td>
                    <td>
                        <div class="btn-group">
                            <a data-product="${product.id_product}" class="btn btn-outline-danger delete-product" name="delete">
                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16"
                                    fill="currentColor" class="bi bi-x-lg" viewBox="0 0 16 16">
                                    <path
                                        d="M1.293 1.293a1 1 0 0 1 1.414 0L8 6.586l5.293-5.293a1 1 0 1 1 1.414 1.414L9.414 8l5.293 5.293a1 1 0 0 1-1.414 1.414L8 9.414l-5.293 5.293a1 1 0 0 1-1.414-1.414L6.586 8 1.293 2.707a1 1 0 0 1 0-1.414z" />
                                </svg>
                                <span class="visually-hidden">Button</span>
                            </a>
                            <a href="/api/products/editProductByIdPage/${product.id_product}"
                                class="btn btn-outline-primary edit-product">
                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16"
                                    fill="currentColor" class="bi bi-three-dots-vertical"
                                    viewBox="0 0 16 16">
                                    <path
                                        d="M9.5 13a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0z" />
                                </svg>
                                <span class="visually-hidden">Button</span>
                            </a>
                        </div>
                    </td>
                `
                productsTable.appendChild(element)
            })
        }

        async deleteProduct(product) {
            if (product.name === 'delete') {
                const productId = product.getAttribute('data-product')

                const path = `/api/products/deleteProductByIdByRestaurant/${productId}`

                try {
                    const data = await fetch(path, {
                        method: 'DELETE'
                    })
                    const response = await data.json()

                    const confirm = window.confirm('¿Esta seguro de borrar el producto?')
                    if (confirm) {
                        if (data.ok) {
                            return data.ok
                        }
                    }
                } catch (error) {
                    console.log(error)
                }
            }
        }
    }

    addEventListener('load', async function () {
        const product = new UI()
        const products = await product.loadProducts()

        product.showProductsTable(products)

        document.querySelectorAll('.delete-product').forEach(function (item, i) {
            item.addEventListener('click', async function () {
                const response = await product.deleteProduct(item)

                if (response) {
                    item.parentElement.parentElement.parentElement.remove()
                }
            })
        })
    })
</script>