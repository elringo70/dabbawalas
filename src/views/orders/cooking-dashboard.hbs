{{>sidebar}}
<div class="admin-container">
    <div class="container-fluid">
        <div class="row py-3">
            <div class="col-md-12 fw-bold fs-3">Registro de cocineros</div>
        </div>
        <div class="row mt-3">
            <div class="col-md-12">
                <div class="card">
                    <div class="card-header">
                        Ordenes activas
                    </div>
                    <div class="card-body">
                        <table class="table table-hover align-middle" id="orders-table">
                            <thead>
                                <tr class="text-center">
                                    <th>ID</th>
                                    <th>Número telefónico</th>
                                    <th>Cliente</th>
                                    <th>Total</th>
                                    <th>Hora de creación</th>
                                    <th>Status</th>
                                    <th>Acción</th>
                                </tr>
                            </thead>
                            <tbody id="orders-list"></tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    let orders = []
    const ordersList = document.getElementById('orders-list')

    function renderOrders() {
        ordersList.innerHTML = ''
        orders.map(order => {
            const tr = document.createElement('tr')
            tr.setAttribute('data-order', order.id)
            tr.classList.add('text-center')
            const content = `
                <td><a href="/api/orders/getCookerOrderDetailPage/${order.id}">${order.id}</a></td>
                <td>${order.phone}</td>
                <td><a href="#">${order.customer}</a></td>
                <td>$ ${order.total}</td>
                <td>${order.creationTime}</td>
                <td>${order.status.toUpperCase()}</td>
                <td>
                    <div class="btn-group">
                        <a data-order="${order.id}" class="btn btn-outline-primary complete-order">
                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-check-lg" viewBox="0 0 16 16">
                                <path d="M13.485 1.431a1.473 1.473 0 0 1 2.104 2.062l-7.84 9.801a1.473 1.473 0 0 1-2.12.04L.431 8.138a1.473 1.473 0 0 1 2.084-2.083l4.111 4.112 6.82-8.69a.486.486 0 0 1 .04-.045z"/>
                            </svg>
                            <span class="visually-hidden">Button</span>
                        </a>
                    </div>
                </td>
            `

            tr.innerHTML = content
            ordersList.append(tr)

            tr.querySelector('.complete-order').addEventListener('click', async function () {
                await completeOrder(order.id)
            })
        })
    }

    async function loadOrders() {
        path = `/api/orders/getAllTodayOrders`

        try {
            const data = await fetch(path)
            const response = await data.json()

            for (let i = 0; i < response.length; i++) {
                const date = new Date(response[i].createdAt)
                const order = {
                    id: response[i].id_order,
                    phone: response[i].phone,
                    customer: `${response[i].name} ${response[i].lastname}`,
                    total: response[i].total,
                    creationTime: date.toLocaleTimeString(),
                    status: response[i].orderstatus
                }
                orders.push(order)
            }
        } catch (error) {
            console.log(error)
        }
    }

    async function completeOrder(orderId) {
        path = `/api/orders/postCompleteOrder`

        try {
            const confirm = window.confirm('¿Desea completar la order?')
            if (confirm) {
                const data = await fetch(path, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ id_order: orderId })
                })
                const response = await data.json()
                await reloadOrderList()
                return response
            }
        } catch (error) {
            console.log(error)
        }
    }

    async function reloadOrderList() {
        orders = []
        await loadOrders()
        renderOrders()
    }

    addEventListener('load', async function () {
        await loadOrders()
        renderOrders()
    })
</script>